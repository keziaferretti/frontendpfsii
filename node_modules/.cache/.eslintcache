[{"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\index.js":"1","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\App.js":"2","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaFormExemplar.jsx":"3","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaMenuSistema.js":"4","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaCadastroLivro.jsx":"5","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\Tela404.js":"6","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\utilitarios\\definicoes.js":"7","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaLivro.jsx":"8","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaExemplar.jsx":"9","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormExemplar.jsx":"10","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormLivro.jsx":"11","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Paginas\\Inicio.jsx":"12","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Pagina.js":"13","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Rodape.js":"14","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Cabecalho.js":"15","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Menu.js":"16","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\componentes\\busca\\CaixaSelecao.jsx":"17","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaCadastroPessoa.jsx":"18","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormPessoa.jsx":"19","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaPessoa.jsx":"20","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormEmprestimo.jsx":"21","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\componentes\\busca\\BarraBusca.jsx":"22","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaEmprestimo.jsx":"23","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaItensEmprestimo.jsx":"24","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaFormEmprestimo.jsx":"25"},{"size":279,"mtime":1696779928274,"results":"26","hashOfConfig":"27"},{"size":1130,"mtime":1696791094885,"results":"28","hashOfConfig":"27"},{"size":3888,"mtime":1696989510644,"results":"29","hashOfConfig":"27"},{"size":269,"mtime":1696774752755,"results":"30","hashOfConfig":"27"},{"size":3357,"mtime":1696989706307,"results":"31","hashOfConfig":"27"},{"size":393,"mtime":1696774752630,"results":"32","hashOfConfig":"27"},{"size":175,"mtime":1696788818792,"results":"33","hashOfConfig":"27"},{"size":6336,"mtime":1696774752868,"results":"34","hashOfConfig":"27"},{"size":4149,"mtime":1696774752804,"results":"35","hashOfConfig":"27"},{"size":6056,"mtime":1696774752211,"results":"36","hashOfConfig":"27"},{"size":5897,"mtime":1696987667876,"results":"37","hashOfConfig":"27"},{"size":231,"mtime":1696774752336,"results":"38","hashOfConfig":"27"},{"size":434,"mtime":1696774753011,"results":"39","hashOfConfig":"27"},{"size":330,"mtime":1696774753040,"results":"40","hashOfConfig":"27"},{"size":397,"mtime":1696774752951,"results":"41","hashOfConfig":"27"},{"size":1827,"mtime":1696774752977,"results":"42","hashOfConfig":"27"},{"size":3103,"mtime":1696985628413,"results":"43","hashOfConfig":"27"},{"size":3571,"mtime":1696989676010,"results":"44","hashOfConfig":"27"},{"size":7750,"mtime":1696987891131,"results":"45","hashOfConfig":"27"},{"size":4972,"mtime":1696774752893,"results":"46","hashOfConfig":"27"},{"size":12745,"mtime":1696986142241,"results":"47","hashOfConfig":"27"},{"size":5402,"mtime":1696170066411,"results":"48","hashOfConfig":"27"},{"size":4823,"mtime":1696984042137,"results":"49","hashOfConfig":"27"},{"size":2391,"mtime":1696774752834,"results":"50","hashOfConfig":"27"},{"size":3433,"mtime":1696989553339,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tukloa",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\index.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\App.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaFormExemplar.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaMenuSistema.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaCadastroLivro.jsx",["132","133","134"],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\Tela404.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\utilitarios\\definicoes.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaLivro.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaExemplar.jsx",["135","136","137","138","139","140","141","142"],[],"import { Button, Table, Form, Container, Row, Col } from \"react-bootstrap\";\nimport \"./estilos/tabela.css\";\nimport { urlBase } from \"../utilitarios/definicoes\";\nimport { useState } from \"react\";\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nexport default function TabelaExemplar(props) {\n\n  const [termoDeBusca, setTermoDeBusca] = useState('');\n  const [exemplar, setExemplar] = useState([]);\n  const [acervoLista, setAcervoLista] = useState([]);\n  \n\n  return (\n        <body id=\"corpo\" className=\"colorwhite \">\n              <Container className=\"border mb-2 mt-2 corpoTabela\" >\n                  <h2 className=\"text-center m-4 \">Exemplares Cadastrados</h2>\n                  <Row className='mb-2 mt-2 '>\n                      <Col>\n                          <Button variant=\"success\" \n                          onClick={()=>{\n                              props.exibirTabela(false)\n                              props.setModoEdicao(false)\n                              }}>\n                              Cadastrar\n                          </Button>\n                      </Col>\n                  </Row>\n        \n        <Table striped bordered hover className=\"text-center\">\n          <thead className=\"colorwhite\">\n            <tr>\n              <th>Codigo</th>\n              <th>Titulo</th>\n              <th>Quantidade</th>\n              <th>Data de Cadastro</th>\n              <th>Ações</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.listaExemplar?.map((exemplar, i) => {\n              return (\n                <tr key={i}>\n                  <td id=\"colorwhite\">{exemplar.codigo}</td>\n                  <td id=\"colorwhite\">{exemplar.acervo.titulo}</td>\n                  <td id=\"colorwhite\">{exemplar.quantidade}</td>\n                  <td id=\"colorwhite\">{exemplar.dataCadastro}</td>\n                  <td>\n                    <Button variant=\"warning\" onClick={() => { props.editarExemplar(exemplar)}}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        className=\"bi bi-pencil\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\n                      </svg>\n                    </Button>{\" \"}\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => {\n                        if (\n                          window.confirm(\"Deseja realmente excluir a exemplar?\")\n                        ) {\n                          props.excluirExemplar(exemplar);\n                        }\n                      }}\n                      >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"16\"\n                        height=\"16\"\n                        fill=\"currentColor\"\n                        className=\"bi bi-trash\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z\" />\n                        <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z\" />\n                      </svg>\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Container>\n    </body>\n  );\n}\n","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormExemplar.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormLivro.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Paginas\\Inicio.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Pagina.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Rodape.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Cabecalho.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\templates\\componentes\\Menu.js",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\componentes\\busca\\CaixaSelecao.jsx",["143","144"],[],"import { useEffect, useState } from \"react\";\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\n\nexport default function CaixaSelecao({\n    enderecoFonteDados,\n    campoChave,\n    campoExibicao,\n    funcaoSelecao\n}) {\n\n    const [valorSelecionado, setValorSelecionado] = useState({\n        [campoChave]: 0,\n        [campoExibicao]: \"Não foi possível obter os dados do backend\"\n    });\n    const [carregandoDados, setCarregandoDados] = useState(false);\n    const [dados, setDados] = useState([]);\n\n    useEffect(() => {\n        try {\n            setCarregandoDados(true);\n            fetch(enderecoFonteDados,\n                { method: \"GET\" })\n                .then((resposta) => {\n                    if (resposta.ok) {\n                        return resposta.json();\n                    }\n                    else {\n                        return ([{\n                            [campoChave]: 0,\n                            [campoExibicao]: \"Não foi possível obter os dados do backend\"\n                        }\n                        ]);\n                    }\n                }).then((listaDados) => {\n                    setCarregandoDados(false);\n                    setDados(listaDados);\n                    if (listaDados.length > 0) {\n                        setValorSelecionado(listaDados[0]);\n                        funcaoSelecao(listaDados[0]);\n                    }\n                });\n        } catch (erro) {\n            setCarregandoDados(false);\n            setDados([{\n                [campoChave]: 0,\n                [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message\n            }\n            ]);\n        }\n    }, []);\n\n    return (\n        <Container border>\n            <Row>\n                <Col md={11}>\n                    <Form.Select\n                        onChange={(evento) => {\n                            const itemSelecionado = evento.currentTarget.value;\n                            const pos = dados.map((item) => item[campoChave]\n                                .toString())\n                                .indexOf(itemSelecionado);\n                            setValorSelecionado(dados[pos]);\n                            funcaoSelecao(dados[pos]);\n                        }}>\n                        {dados.map((item) => {\n                            let exibicao = campoExibicao.split(\",\");\n\n                            return (\n                                <option key={item[campoChave]} value={item[campoChave]}>\n                                    {exibicao.length > 1\n                                        ? item[exibicao[0]][exibicao[1]]\n                                        : item[campoExibicao]}\n                                </option>\n                            );\n                        })}\n\n                    </Form.Select>\n                </Col>\n                <Col md={1}>\n                    <Spinner\n                        className={carregandoDados ? \"visible\" : \"invisible\"}\n                    ></Spinner>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaCadastroPessoa.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormPessoa.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaPessoa.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\Formularios\\FormEmprestimo.jsx",["145","146","147","148","149","150"],[],"import React, { useEffect, useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { urlBase } from '../utilitarios/definicoes';\r\nimport CaixaSelecao from '../componentes/busca/CaixaSelecao';\r\nimport TabelaItensEmprestimo from '../tabelas/TabelaItensEmprestimo';\r\n\r\n\r\nexport default function Formulario(props) {\r\n\r\n    const [validado, setValidado] = useState(false);\r\n    const [listaPessoa, setListaPessoa] = useState([]);\r\n    const [pessoaSelecionada, setPessoaSelecionada] = useState({});\r\n    const [emprestimoSelecionado, setEmprestimoSelecionado] = useState({});\r\n    const [exemplarSelecionado, setExemplarSelecionado] = useState({});\r\n    const [qtdExemplarSelecionado, setQtdExemplarSelecionado] = useState(1);\r\n    const [listaExemplares, setListaExemplares] = useState([]);\r\n    const [listaEmprestimosSelecionados, setListaEmprestimosSelecionados] = useState([]);\r\n\r\n    const [emprestimo, setEmprestimo] = useState({\r\n        codigo: \"\",\r\n        dataEmprestimo: \"\",\r\n        pessoa: {\r\n            cpf: pessoaSelecionada.cpf\r\n        },\r\n        listaExemplares: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetch(urlBase + \"/pessoa\")\r\n            .then((resposta) => resposta.json())\r\n            .then((dados) => {\r\n                setListaPessoa(dados);\r\n            })\r\n            .then((dados) => {\r\n                setListaExemplares(dados);\r\n            })\r\n            .catch((erro) => {\r\n                alert(\"Erro ao buscar os dados de pessoa\");\r\n                console.error(erro);\r\n            });\r\n    }, []);\r\n\r\n    function manipularMudanca(evento) {\r\n        const elemForm = evento.currentTarget;\r\n        const id = elemForm.id;\r\n        const valor = elemForm.value;\r\n        setEmprestimo({ ...emprestimo, [id]: valor });\r\n    }\r\n\r\n\r\n\r\n    function gravarEmprestimo(emprestimo) {\r\n\r\n        let listaItens = []\r\n        for (const item of listaEmprestimosSelecionados) {\r\n            listaItens.push({\r\n                exemplar: {\r\n                    codigo: item.codigo\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        fetch(urlBase + \"/emprestimo\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                \"dataEmprestimo\": emprestimo.dataEmprestimo,\r\n                \"pessoa\": {\r\n                    \"cpf\": pessoaSelecionada.cpf\r\n                },\r\n                \"listaExemplares\": listaItens\r\n            }),\r\n        }).then((resposta) => resposta.json())\r\n            .then((dados) => {\r\n                if (dados.resultado) {\r\n                    alert(\"Não foi possivel gravar o emprestimo\")\r\n                }\r\n                else {\r\n                    window.alert(\"Emprestimo cadastrado com sucesso!\")\r\n                    props.setModoEdicao(false);\r\n                    props.exibirTabela(true);\r\n                }\r\n            })\r\n            .catch((erro) => {\r\n                alert(\"Erro ao cadastrar o emprestimo\");\r\n                console.error(erro);\r\n\r\n            });\r\n    }\r\n\r\n    const manipulaSubmissao = (evento) => {\r\n        evento.preventDefault();\r\n        evento.stopPropagation();\r\n\r\n        const form = evento.currentTarget;\r\n        if (form.checkValidity()) {\r\n            \r\n            gravarEmprestimo(emprestimo);\r\n            setValidado(false);\r\n        }\r\n        else {\r\n            setValidado(true);\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <body id=\"corpo\">\r\n            <Container className=\"background mb-3\">\r\n                <Form\r\n                    id=\"formEmprestimo\"\r\n                    noValidate\r\n                    validated={validado}\r\n                    onSubmit={manipulaSubmissao}\r\n                    className=\"mainForm\"\r\n                >\r\n                    <h1 className=\"text-center colorWhite\">Cadastro de Emprestimo</h1>\r\n                    <Row>\r\n                        <Col md={5}>\r\n                            <Form.Group>\r\n\r\n                                <Form.Label htmlFor=\"codigo\" className=\"form-label\">Codigo</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    value={emprestimo.codigo}\r\n                                    placeholder=\"Automático\"\r\n                                    id=\"codigo\"\r\n                                    onChange={manipularMudanca}\r\n                                    disabled />\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                        <Col md={5}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"dataEmprestimo\">\r\n                                <Form.Label>Data do Emprestimo</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    id=\"dataEmprestimo\"\r\n                                    onChange={manipularMudanca}\r\n                                    value={emprestimo.dataEmprestimo}\r\n                                    required\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Selecione uma data de Emprestimo válida\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <Form.Group className=\"mb-3\" controlId=\"pessoa\">\r\n                        <Form.Label>Selecione o Pessoa:</Form.Label>\r\n                        <CaixaSelecao\r\n                            enderecoFonteDados={urlBase + \"/pessoa\"}\r\n                            campoChave={\"cpf\"}\r\n                            campoExibicao={\"nome\"}\r\n                            funcaoSelecao={setPessoaSelecionada}\r\n                            valor={pessoaSelecionada}\r\n                            id=\"pessoa\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Container>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\" controlId=\"exemplar\">\r\n                                    <Form.Label>Selecione o Exemplar:</Form.Label>\r\n                                    <CaixaSelecao\r\n                                        enderecoFonteDados={`${urlBase}/exemplar`}\r\n                                        campoChave=\"codigo\"\r\n                                        campoExibicao=\"acervo,titulo\"\r\n                                        funcaoSelecao={setExemplarSelecionado}\r\n                                        valor={exemplarSelecionado}\r\n                                        id=\"exemplar\"\r\n                                    />\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            {/* <Col md={7}>\r\n                                <Form.Label>Titulo</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    onChange={manipularMudanca}\r\n                                    value={exemplarSelecionado && exemplarSelecionado.acervo && exemplarSelecionado.acervo.titulo}\r\n                                    nome=\"exemplarSelecionado\"\r\n                                    disabled\r\n                                    required\r\n                                />\r\n                            </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <Form.Label>Codigo</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    onChange={manipularMudanca}\r\n                                    value={exemplarSelecionado.codigo}\r\n                                    nome=\"exemplarSelecionado\"\r\n                                    disabled\r\n                                    required\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <Form.Label>Quantidade</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    onChange={manipularMudanca}\r\n                                    value={exemplarSelecionado.quantidade}\r\n                                    nome=\"exemplarSelecionado\"\r\n                                    disabled\r\n                                    required\r\n                                />\r\n                            </Col>\r\n\r\n                            <Col md={4}>\r\n                                <Form.Label>Data Cadastro</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    onChange={manipularMudanca}\r\n                                    value={exemplarSelecionado.dataCadastro}\r\n                                    nome=\"exemplarSelecionado\"\r\n                                    disabled\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <br />\r\n                        <Col md={1} onClick={() => {\r\n                            const newItem = {\r\n                                codigo: exemplarSelecionado.codigo,\r\n                                dataEmprestimo: emprestimo.dataEmprestimo,\r\n                                pessoa: {\r\n                                    cpf: pessoaSelecionada.cpf\r\n                                },\r\n                                listaExemplar: [\r\n                                    {\r\n                                        exemplar: {\r\n                                            codigo: exemplarSelecionado.codigo\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            };\r\n                            setListaEmprestimosSelecionados([...listaEmprestimosSelecionados, newItem]);\r\n                        }}>\r\n                            <Button>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"16\"\r\n                                    height=\"16\"\r\n                                    fill=\"currentColor\"\r\n                                    class=\"bi bi-plus-square\"\r\n                                    viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\r\n                                    <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                                </svg>\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Row>\r\n                            <TabelaItensEmprestimo\r\n                                listaItens={listaEmprestimosSelecionados}\r\n                                dadosEmprestimo={emprestimo}\r\n                                setEmprestimo={setEmprestimo}\r\n                                setListaItens={setListaEmprestimosSelecionados}\r\n                            />\r\n                        </Row>\r\n\r\n                    </Container>\r\n\r\n                    <Row className='mb-3 botao'>\r\n                        <div className=\"botao\">\r\n                            <Button type=\"submit\"\r\n                                className=\"botao\"\r\n                                id=\"cadastrar\">{props.modoEdicao ? \"Atualizar\" : \"Cadastrar\"}\r\n                            </Button>{' '}\r\n\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    props.exibirTabela(true);\r\n                                    props.setModoEdicao(false);\r\n                                }}\r\n                            >Voltar\r\n                            </Button>{' '}\r\n\r\n                        </div>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Container >\r\n        </body >\r\n    );\r\n}\r\n","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\componentes\\busca\\BarraBusca.jsx",[],[],"C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaEmprestimo.jsx",["151","152","153","154","155","156"],[],"    import React, { useState } from \"react\";\n    import { Button, Table, Container, Row, Col } from \"react-bootstrap\";\n    import \"./estilos/tabela.css\";\n    import 'bootstrap-icons/font/bootstrap-icons.css';\n\n    export default function TabelaEmprestimo(props) {\n\n        const [termoDeBusca, setTermoDeBusca] = useState('');\n        const [exemplar, setExemplar] = useState([]);\n        const [acervoLista, setAcervoLista] = useState([]);\n\n        return (\n            <body id=\"corpo\" className=\"colorwhite \">\n                <Container className=\"border mb-2 mt-2 corpoTabela\" >\n                    <h2 className=\"text-center m-4\">Empréstimos Cadastrados</h2>\n                    <Row className='mb-2 mt-2 '>\n                        <Col>\n                            <Button variant=\"success\"\n                                onClick={() => {\n                                    props.exibirTabela(false);\n                                    props.setModoEdicao(false);\n                                }}>\n                                Cadastrar\n                            </Button>\n                        </Col>\n                    </Row>\n\n                    <Table striped bordered hover className=\"text-center\">\n                        <thead className=\"colorwhite\">\n                            <tr>\n                                <th>Código</th>\n                                <th>Data de Empréstimo</th>\n                                <th>Nome</th>\n                                <th>CPF</th>\n                                <th>Categoria</th>\n                                <th>Codigo Exemplar</th>\n                                <th>Título Exemplar</th>\n                                <th>Ação</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.listaEmprestimos?.map((emprestimo, indice) => {\n                                // Converte a data de string para um objeto Date\n                                const dataEmprestimo = new Date(emprestimo.dataEmprestimo);\n\n                                // Obtém o dia, mês e ano da data\n                                const dia = String(dataEmprestimo.getDate()).padStart(2, '0');\n                                const mes = String(dataEmprestimo.getMonth() + 1).padStart(2, '0'); // Adicione 1 ao mês, pois ele é baseado em zero\n                                const ano = dataEmprestimo.getFullYear();\n\n                                // Formata a data como \"dd/mm/yyyy\"\n                                const dataFormatada = `${dia}/${mes}/${ano}`;\n\n                                return (\n                                    <tr key={indice}>\n                                        <td id=\"colorwhite\">{emprestimo.codigo}</td>\n                                        <td id=\"colorwhite\">{dataFormatada}</td>\n                                        <td id=\"colorwhite\">{emprestimo.pessoa.nome}</td>\n                                        <td id=\"colorwhite\">{emprestimo.pessoa.cpf}</td>\n                                        <td id=\"colorwhite\">{emprestimo.pessoa.categoria}</td>\n                                        <td id=\"colorwhite\">\n                                            {emprestimo.listaExemplares.map((exemplar, index) => (\n                                                <div key={index}>{exemplar.exemplar.codigo}</div>\n                                            ))}\n                                        </td>\n                                        <td id=\"colorwhite\">\n                                            {emprestimo.listaExemplares.map((exemplar, index) => (\n                                                <div key={index}>{exemplar.exemplar.acervo.titulo}</div>\n                                            ))}\n                                        </td>\n                                        <td>\n                                            <Button variant=\"danger\"\n                                                onClick={() => {\n                                                    if (window.confirm(\"Deseja realmente excluir o empréstimo?\")) {\n                                                        props.excluirEmprestimo(emprestimo);\n                                                    }\n                                                }}\n                                            >\n                                                <i className=\"bi bi-trash\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n\n                </Container>\n            </body>\n        );\n    }\n","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\tabelas\\TabelaItensEmprestimo.jsx",["157"],[],"import React, { useState } from \"react\";\nimport { Button, Container, Table } from \"react-bootstrap\";\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport \"./estilos/tabela.css\";\n\nexport default function TabelaItensEmprestimo(props) {\n\n    return (\n        <Container className=\"m-2 border\">\n            <Table striped bordered hover>\n                <thead className=\"colorwhite\">\n                    <tr>\n                        <th>Código Titulo</th>\n                        <th>Data de Empréstimo</th>\n                        <th>pessoa</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        props.listaItens?.map((item, indice) => {\n                            return (\n                                <tr key={indice} >\n                                    <td id=\"colorwhite\">{item.codigo}</td>\n                                    <td id=\"colorwhite\">{item.dataEmprestimo}</td>\n                                    <td id=\"colorwhite\">{item.pessoa.cpf}</td>\n                                    <td>\n                                        <Button onClick={() => {\n                                            const lista = props.listaItens.filter((prod) => prod.codigo !== item.codigo);\n                                            props.setEmprestimo({ ...props.dadosEmprestimo, listaEmprestimos: lista });\n                                            props.setListaItens(lista);\n                                        }}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-bag-dash\" viewBox=\"0 0 16 16\">\n                                                <path fill-rule=\"evenodd\" d=\"M5.5 10a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H6a.5.5 0 0 1-.5-.5z\" />\n                                                <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z\" />\n                                            </svg>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </Table>\n        </Container>\n    );\n}\n","C:\\unoeste\\Analise e desenvolvimente sistema\\4 semestre\\PROGRAMAÇÃO FULL STACK II\\frontEnd\\src\\interfaces\\TelaFormEmprestimo.jsx",[],[],{"ruleId":"158","severity":1,"message":"159","line":4,"column":31,"nodeType":"160","messageId":"161","endLine":4,"endColumn":44},{"ruleId":"158","severity":1,"message":"162","line":13,"column":12,"nodeType":"160","messageId":"161","endLine":13,"endColumn":16},{"ruleId":"158","severity":1,"message":"163","line":14,"column":12,"nodeType":"160","messageId":"161","endLine":14,"endColumn":22},{"ruleId":"158","severity":1,"message":"164","line":1,"column":25,"nodeType":"160","messageId":"161","endLine":1,"endColumn":29},{"ruleId":"158","severity":1,"message":"165","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"166","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":22},{"ruleId":"158","severity":1,"message":"167","line":9,"column":24,"nodeType":"160","messageId":"161","endLine":9,"endColumn":39},{"ruleId":"158","severity":1,"message":"168","line":10,"column":10,"nodeType":"160","messageId":"161","endLine":10,"endColumn":18},{"ruleId":"158","severity":1,"message":"169","line":10,"column":20,"nodeType":"160","messageId":"161","endLine":10,"endColumn":31},{"ruleId":"158","severity":1,"message":"170","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":21},{"ruleId":"158","severity":1,"message":"171","line":11,"column":23,"nodeType":"160","messageId":"161","endLine":11,"endColumn":37},{"ruleId":"158","severity":1,"message":"172","line":11,"column":12,"nodeType":"160","messageId":"161","endLine":11,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":50,"column":8,"nodeType":"175","endLine":50,"endColumn":10,"suggestions":"176"},{"ruleId":"158","severity":1,"message":"177","line":14,"column":12,"nodeType":"160","messageId":"161","endLine":14,"endColumn":23},{"ruleId":"158","severity":1,"message":"178","line":16,"column":12,"nodeType":"160","messageId":"161","endLine":16,"endColumn":33},{"ruleId":"158","severity":1,"message":"179","line":16,"column":35,"nodeType":"160","messageId":"161","endLine":16,"endColumn":59},{"ruleId":"158","severity":1,"message":"180","line":18,"column":12,"nodeType":"160","messageId":"161","endLine":18,"endColumn":34},{"ruleId":"158","severity":1,"message":"181","line":18,"column":36,"nodeType":"160","messageId":"161","endLine":18,"endColumn":61},{"ruleId":"158","severity":1,"message":"182","line":19,"column":12,"nodeType":"160","messageId":"161","endLine":19,"endColumn":27},{"ruleId":"158","severity":1,"message":"166","line":8,"column":16,"nodeType":"160","messageId":"161","endLine":8,"endColumn":28},{"ruleId":"158","severity":1,"message":"167","line":8,"column":30,"nodeType":"160","messageId":"161","endLine":8,"endColumn":45},{"ruleId":"158","severity":1,"message":"168","line":9,"column":16,"nodeType":"160","messageId":"161","endLine":9,"endColumn":24},{"ruleId":"158","severity":1,"message":"169","line":9,"column":26,"nodeType":"160","messageId":"161","endLine":9,"endColumn":37},{"ruleId":"158","severity":1,"message":"170","line":10,"column":16,"nodeType":"160","messageId":"161","endLine":10,"endColumn":27},{"ruleId":"158","severity":1,"message":"171","line":10,"column":29,"nodeType":"160","messageId":"161","endLine":10,"endColumn":43},{"ruleId":"158","severity":1,"message":"183","line":1,"column":17,"nodeType":"160","messageId":"161","endLine":1,"endColumn":25},"no-unused-vars","'useTransition' is defined but never used.","Identifier","unusedVar","'erro' is assigned a value but never used.","'processado' is assigned a value but never used.","'Form' is defined but never used.","'urlBase' is defined but never used.","'termoDeBusca' is assigned a value but never used.","'setTermoDeBusca' is assigned a value but never used.","'exemplar' is assigned a value but never used.","'setExemplar' is assigned a value but never used.","'acervoLista' is assigned a value but never used.","'setAcervoLista' is assigned a value but never used.","'valorSelecionado' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'campoChave', 'campoExibicao', 'enderecoFonteDados', and 'funcaoSelecao'. Either include them or remove the dependency array. If 'funcaoSelecao' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["184"],"'listaPessoa' is assigned a value but never used.","'emprestimoSelecionado' is assigned a value but never used.","'setEmprestimoSelecionado' is assigned a value but never used.","'qtdExemplarSelecionado' is assigned a value but never used.","'setQtdExemplarSelecionado' is assigned a value but never used.","'listaExemplares' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"185","fix":"186"},"Update the dependencies array to be: [campoChave, campoExibicao, enderecoFonteDados, funcaoSelecao]",{"range":"187","text":"188"},[1682,1684],"[campoChave, campoExibicao, enderecoFonteDados, funcaoSelecao]"]