{"ast":null,"code":"var _jsxFileName = \"C:\\\\unoeste\\\\Analise e desenvolvimente sistema\\\\4 semestre\\\\PROGRAMA\\xC7\\xC3O FULL STACK II\\\\frontEnd\\\\src\\\\componentes\\\\busca\\\\CaixaSelecao.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CaixaSelecao(_ref) {\n  _s();\n  let {\n    enderecoFonteDados,\n    campoChave,\n    campoExibicao,\n    funcaoSelecao\n  } = _ref;\n  const [valorSelecionado, setValorSelecionado] = useState({\n    [campoChave]: 0,\n    [campoExibicao]: \"Não foi possível obter os dados do backend\"\n  });\n  const [carregandoDados, setCarregandoDados] = useState(false);\n  const [dados, setDados] = useState([]);\n  useEffect(() => {\n    try {\n      setCarregandoDados(true);\n      fetch(enderecoFonteDados, {\n        method: \"GET\"\n      }).then(resposta => {\n        if (resposta.ok) {\n          return resposta.json();\n        } else {\n          return [{\n            [campoChave]: 0,\n            [campoExibicao]: \"Não foi possível obter os dados do backend\"\n          }];\n        }\n      }).then(listaDados => {\n        setCarregandoDados(false);\n        setDados(listaDados);\n        if (listaDados.length > 0) {\n          setValorSelecionado(listaDados[0]);\n          funcaoSelecao(listaDados[0]);\n        }\n      });\n    } catch (erro) {\n      setCarregandoDados(false);\n      setDados([{\n        [campoChave]: 0,\n        [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message\n      }]);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    border: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 11,\n        children: /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: evento => {\n            const itemSelecionado = evento.currentTarget.value;\n            const pos = dados.map(item => item[campoChave].toString()).indexOf(itemSelecionado);\n            setValorSelecionado(dados[pos]);\n            funcaoSelecao(dados[pos]);\n          },\n          children: dados.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: item[campoChave],\n              children: item[campoExibicao]\n            }, item[campoChave], false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 1,\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          className: carregandoDados ? \"visible\" : \"invisible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(CaixaSelecao, \"Ccj9c5Dt12iq7s4D7tAye3+6nrQ=\");\n_c = CaixaSelecao;\nvar _c;\n$RefreshReg$(_c, \"CaixaSelecao\");","map":{"version":3,"names":["useEffect","useState","Container","Col","Form","Row","Spinner","jsxDEV","_jsxDEV","CaixaSelecao","_ref","_s","enderecoFonteDados","campoChave","campoExibicao","funcaoSelecao","valorSelecionado","setValorSelecionado","carregandoDados","setCarregandoDados","dados","setDados","fetch","method","then","resposta","ok","json","listaDados","length","erro","message","border","children","md","Select","onChange","evento","itemSelecionado","currentTarget","value","pos","map","item","toString","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/unoeste/Analise e desenvolvimente sistema/4 semestre/PROGRAMAÇÃO FULL STACK II/frontEnd/src/componentes/busca/CaixaSelecao.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Container, Col, Form, Row, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function CaixaSelecao({ \r\n                                        enderecoFonteDados,\r\n                                        campoChave,\r\n                                        campoExibicao,\r\n                                        funcaoSelecao \r\n                                    }) {\r\n\r\n    const [valorSelecionado, setValorSelecionado] = useState({\r\n                            [campoChave]: 0,\r\n                            [campoExibicao]:\"Não foi possível obter os dados do backend\"\r\n                        });\r\n    const [carregandoDados, setCarregandoDados] = useState(false);\r\n    const [dados, setDados] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setCarregandoDados(true);\r\n            fetch(enderecoFonteDados, \r\n                { method: \"GET\" })\r\n                .then((resposta) => {\r\n                if (resposta.ok) {  \r\n                    return resposta.json();\r\n                }\r\n                else {\r\n                    return ([{\r\n                        [campoChave]: 0,\r\n                        [campoExibicao]:\"Não foi possível obter os dados do backend\"\r\n                    }\r\n                    ]);\r\n                }\r\n            }).then((listaDados) => {\r\n                setCarregandoDados(false);\r\n                setDados(listaDados);\r\n                if (listaDados.length > 0){\r\n                   setValorSelecionado(listaDados[0]);\r\n                   funcaoSelecao(listaDados[0]);     \r\n                }\r\n            });\r\n        }catch(erro){\r\n            setCarregandoDados(false);\r\n            setDados([{\r\n                       [campoChave]: 0,\r\n                       [campoExibicao]: \"Não foi possível obter os dados do backend: \" + erro.message \r\n                      }\r\n                    ]);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Container border>\r\n            <Row>\r\n                <Col md={11}>\r\n                    <Form.Select\r\n                                 onChange={(evento) => {\r\n                                    const itemSelecionado = evento.currentTarget.value;\r\n                                    const pos = dados.map((item) => item[campoChave]\r\n                                    .toString())\r\n                                    .indexOf(itemSelecionado);\r\n                                    setValorSelecionado(dados[pos]);\r\n                                    funcaoSelecao(dados[pos]);\r\n                                 }}>\r\n                        {\r\n                            dados.map((item) => {\r\n                                return <option key={item[campoChave]} \r\n                                               value={item[campoChave]}>\r\n                                                {item[campoExibicao]}\r\n                                       </option>\r\n                            })\r\n                        }\r\n                        \r\n                    </Form.Select>\r\n                </Col>\r\n                <Col md={1}>\r\n                    <Spinner \r\n                    className={carregandoDados ? \"visible\" : \"invisible\"}\r\n                    ></Spinner>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}